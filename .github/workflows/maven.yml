name: CI/CD Pipeline

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Build with Maven
        run: mvn clean install

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Configure AWS CLI
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1  # Specify your AWS region

      - name: Log in to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build and Push Catalog Docker image to ECR
        id: build-images
        run: |
          ECR_REGISTRY=629085180773.dkr.ecr.us-east-1.amazonaws.com
          ECR_REPOSITORY=catalog
          docker build --target catalog-runtime -t $ECR_REGISTRY/$ECR_REPOSITORY:latest .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest

      - name: Build and Push UserManagement Docker image to ECR
        run: |
          ECR_REGISTRY=629085180773.dkr.ecr.us-east-1.amazonaws.com
          ECR_REPOSITORY=usermanagement
          docker build --target usermanagement-runtime -t $ECR_REGISTRY/$ECR_REPOSITORY:latest .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest

      - name: Verify Docker images on ECR
        run: |
          ECR_REGISTRY=629085180773.dkr.ecr.us-east-1.amazonaws.com
          aws ecr describe-images --repository-name catalog --image-ids imageTag=latest
          aws ecr describe-images --repository-name usermanagement --image-ids imageTag=latest

      - name: Update ECS service with the new Catalog image
        id: task-def
        uses:
        run: |
          ECS_CLUSTER=eshop-cluster
          ECS_SERVICE=catalog-service
          CONTAINER_NAME=catalog
          NEW_IMAGE_URI=$ECR_REGISTRY/catalog:latest
          aws ecs update-service --cluster $ECS_CLUSTER --service $ECS_SERVICE --force-new-deployment --query "service.deployments[0].taskDefinition" | xargs -I {} aws ecs describe-task-definition --task-definition {} --query "taskDefinition.containerDefinitions[?name=='$CONTAINER_NAME'].image" | grep -q $NEW_IMAGE_URI

      - name: Update ECS service with the new UserManagement image
        run: |
          ECS_CLUSTER=eshop-cluster
          ECS_SERVICE=user-management-service
          CONTAINER_NAME=usermanagement
          NEW_IMAGE_URI=$ECR_REGISTRY/usermanagement:latest
          aws ecs update-service --cluster $ECS_CLUSTER --service $ECS_SERVICE --force-new-deployment --query "service.deployments[0].taskDefinition" | xargs -I {} aws ecs describe-task-definition --task-definition {} --query "taskDefinition.containerDefinitions[?name=='$CONTAINER_NAME'].image" | grep -q $NEW_IMAGE_URI
